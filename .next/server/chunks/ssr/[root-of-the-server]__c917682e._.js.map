{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/almardas/Desktop/teaching-platform/src/components/cube.tsx"],"sourcesContent":["'use client';\n\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { OrbitControls } from '@react-three/drei';\nimport gsap from 'gsap';\nimport * as THREE from 'three';\n\nfunction AudioReactiveCube({ analyser }: { analyser: AnalyserNode | null }) {\n  const meshRef = useRef<THREE.Mesh>(null);\n  const dataArray = useRef<Uint8Array | null>(null);\n\n  useEffect(() => {\n    if (analyser) {\n      const bufferLength = analyser.frequencyBinCount;\n      dataArray.current = new Uint8Array(bufferLength);\n    }\n  }, [analyser]);\n\n  useFrame(() => {\n    if (!analyser || !dataArray.current || !meshRef.current) return;\n\n    analyser.getByteFrequencyData(dataArray.current);\n    const average = dataArray.current.reduce((a, b) => a + b, 0) / dataArray.current.length;\n\n    const scale = 1 + average / 256;\n\n    gsap.to(meshRef.current.scale, {\n      x: scale,\n      y: scale,\n      z: scale,\n      duration: 0.2,\n      ease: 'power1.out',\n    });\n  });\n\n  return (\n    <mesh ref={meshRef}>\n      <boxGeometry args={[2, 2, 2]} />\n      <meshStandardMaterial color=\"skyblue\" />\n    </mesh>\n  );\n}\n\nexport default function AudioVisualizerCube() {\n  const [analyser, setAnalyser] = useState<AnalyserNode | null>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file || !videoRef.current) return;\n\n    const url = URL.createObjectURL(file);\n    videoRef.current.src = url;\n\n    const context = new AudioContext();\n    const source = context.createMediaElementSource(videoRef.current);\n    const analyserNode = context.createAnalyser();\n    analyserNode.fftSize = 256;\n\n    source.connect(analyserNode);\n    analyserNode.connect(context.destination);\n\n    setAnalyser(analyserNode);\n  };\n\n  return (\n    <div className=\"p-6\">\n      {/* File input on top */}\n      <div className=\"mb-4\">\n        <input\n          type=\"file\"\n          accept=\"video/*\"\n          onChange={handleFileUpload}\n          className=\"block border border-gray-300 rounded p-2 cursor-pointer\"\n        />\n      </div>\n\n      {/* Two-column layout: video left, cube right */}\n      <div className=\"flex flex-col lg:flex-row gap-6 items-start justify-center\">\n        {/* Video section (left) */}\n        <video\n          ref={videoRef}\n          controls\n          className=\"w-full max-w-lg aspect-video border rounded shadow\"\n          onPlay={() => {\n            const ctx = new AudioContext();\n            if (ctx.state === 'suspended') ctx.resume();\n          }}\n        />\n\n        {/* 3D Cube section (right) */}\n        <div className=\"w-full h-[400px] max-w-2xl\">\n          <Canvas camera={{ position: [0, 0, 10], fov: 50 }}>\n            <Suspense fallback={null}>\n              <ambientLight intensity={0.5} />\n              <directionalLight position={[3, 3, 3]} />\n              <AudioReactiveCube analyser={analyser} />\n              <OrbitControls />\n            </Suspense>\n          </Canvas>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AACA;AALA;;;;;;AAQA,SAAS,kBAAkB,EAAE,QAAQ,EAAqC;IACxE,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAc;IACnC,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAqB;IAE5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU;YACZ,MAAM,eAAe,SAAS,iBAAiB;YAC/C,UAAU,OAAO,GAAG,IAAI,WAAW;QACrC;IACF,GAAG;QAAC;KAAS;IAEb,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE;QACP,IAAI,CAAC,YAAY,CAAC,UAAU,OAAO,IAAI,CAAC,QAAQ,OAAO,EAAE;QAEzD,SAAS,oBAAoB,CAAC,UAAU,OAAO;QAC/C,MAAM,UAAU,UAAU,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAK,UAAU,OAAO,CAAC,MAAM;QAEvF,MAAM,QAAQ,IAAI,UAAU;QAE5B,6IAAA,CAAA,UAAI,CAAC,EAAE,CAAC,QAAQ,OAAO,CAAC,KAAK,EAAE;YAC7B,GAAG;YACH,GAAG;YACH,GAAG;YACH,UAAU;YACV,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAK,KAAK;;0BACT,8OAAC;gBAAY,MAAM;oBAAC;oBAAG;oBAAG;iBAAE;;;;;;0BAC5B,8OAAC;gBAAqB,OAAM;;;;;;;;;;;;AAGlC;AAEe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAC9D,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,MAAM,mBAAmB,CAAC;QACxB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,EAAE;QAEhC,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,SAAS,OAAO,CAAC,GAAG,GAAG;QAEvB,MAAM,UAAU,IAAI;QACpB,MAAM,SAAS,QAAQ,wBAAwB,CAAC,SAAS,OAAO;QAChE,MAAM,eAAe,QAAQ,cAAc;QAC3C,aAAa,OAAO,GAAG;QAEvB,OAAO,OAAO,CAAC;QACf,aAAa,OAAO,CAAC,QAAQ,WAAW;QAExC,YAAY;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,MAAK;oBACL,QAAO;oBACP,UAAU;oBACV,WAAU;;;;;;;;;;;0BAKd,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBACC,KAAK;wBACL,QAAQ;wBACR,WAAU;wBACV,QAAQ;4BACN,MAAM,MAAM,IAAI;4BAChB,IAAI,IAAI,KAAK,KAAK,aAAa,IAAI,MAAM;wBAC3C;;;;;;kCAIF,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,mMAAA,CAAA,SAAM;4BAAC,QAAQ;gCAAE,UAAU;oCAAC;oCAAG;oCAAG;iCAAG;gCAAE,KAAK;4BAAG;sCAC9C,cAAA,8OAAC,qMAAA,CAAA,WAAQ;gCAAC,UAAU;;kDAClB,8OAAC;wCAAa,WAAW;;;;;;kDACzB,8OAAC;wCAAiB,UAAU;4CAAC;4CAAG;4CAAG;yCAAE;;;;;;kDACrC,8OAAC;wCAAkB,UAAU;;;;;;kDAC7B,8OAAC,iKAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5B","debugId":null}}]
}